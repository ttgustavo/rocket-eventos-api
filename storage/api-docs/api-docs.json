{
    "openapi": "3.0.0",
    "info": {
        "title": "Rocket Eventos",
        "version": "0.1"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api"
        }
    ],
    "paths": {
        "/admin/events": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "List events.",
                "operationId": "4a806a3ff9c15c0ae9b8f9bfae4d59a5",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The event was created and returns all its data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "When \"code\" is zero, means validation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "totalItems": {
                                            "type": "integer",
                                            "default": "1"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EventModel"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The admin is not authenticated."
                    },
                    "403": {
                        "description": "The user is not an admin/super."
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Creates an event.",
                "operationId": "5fb64e8b0d0096b434cb2826820373ae",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "slug",
                                    "details",
                                    "subscription_date_start",
                                    "subscription_date_end",
                                    "presentation_at"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "slug": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "details": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "subscription_date_start": {
                                        "type": "string",
                                        "format": "date-time",
                                        "default": ""
                                    },
                                    "subscription_date_end": {
                                        "type": "string",
                                        "format": "date-time",
                                        "default": ""
                                    },
                                    "presentation_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "default": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The event was created and returns all its data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The admin is not authenticated."
                    },
                    "403": {
                        "description": "The user is not an admin/super."
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/events/{id}": {
            "delete": {
                "tags": [
                    "Admin"
                ],
                "summary": "Deletes an event.",
                "operationId": "ffeb53815e6ed101fe7cc0bcd7fd8bef",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the event.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The event was deleted."
                    },
                    "400": {
                        "description": "When \"code\" is zero, means validation. When is one, means that the event does not exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "default": "0"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The admin is not authenticated."
                    },
                    "403": {
                        "description": "The user is not an admin/super."
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Admin"
                ],
                "summary": "Updates an event.",
                "operationId": "b1c734bd4f72fa8172746275f464a361",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the event.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "slug": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "details": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "subscription_date_start": {
                                        "type": "string",
                                        "format": "date-time",
                                        "default": ""
                                    },
                                    "subscription_date_end": {
                                        "type": "string",
                                        "format": "date-time",
                                        "default": ""
                                    },
                                    "presentation_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "default": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The event was updated and returns all its data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "When \"code\" is zero, means validation. When is one, means that the event does not exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "default": "0"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The admin is not authenticated."
                    },
                    "403": {
                        "description": "The user is not an admin/super."
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/events/{slug}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Details of the event.",
                "operationId": "7087984accf1312cf3c0a45572c69c39",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "The slug of the event.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "slug"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The event was created and returns all its data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "When \"code\" is zero, means validation. When is one, means that the event does not exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "default": "0"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The admin is not authenticated."
                    },
                    "403": {
                        "description": "The user is not an admin/super."
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/events/{id}/attendees": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Subscribe to an event",
                "description": "Subscribe user to the event with the specified ID in the route.",
                "operationId": "cc00553d434cb646d85c2189f8fa0a74",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Already subscribed in the event."
                    },
                    "201": {
                        "description": "Subscribed to the event."
                    },
                    "400": {
                        "description": "Failed to subscribe. There are two reasons to that, specified by the code in body:<br>- 0: validation<br>- 1: event does not exist or subscriptions period has finished",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "description": "Abc",
                                            "type": "integer",
                                            "default": 0
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Unsubscribe to an event",
                "description": "Unsubscribe user from the event with the specified ID in the route.",
                "operationId": "412447ad13e3e858943c5bf4fed68fe5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Already unsubscribed to the event."
                    },
                    "204": {
                        "description": "Unsubscribed to the event."
                    },
                    "400": {
                        "description": "Failed to unsubscribe. There are two reasons to that, specified by the code in body:<br>- 0: validation<br>- 1: event does not exist or event has done status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "description": "Abc",
                                            "type": "integer",
                                            "default": 0
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Authenticates the user with e-mail and password specified in the body with JSON format.",
                "operationId": "db45b1dc6cf8a5d3995d75bb65d84b0f",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "password": {
                                        "type": "string",
                                        "default": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authenticated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed to authenticate. There are three reasons to that, specified by the code in body:<br>- 0: validation<br>- 1: wrong email/password<br>- 2: account is banned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "description": "Abc",
                                            "type": "integer",
                                            "default": 0
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Account banned."
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register user",
                "description": "Register an user specifying name, e-mail and password and they are required. This route has two return types.",
                "operationId": "49d5219635f610e10fd5b9774ffe877f",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "email": {
                                        "type": "string",
                                        "default": ""
                                    },
                                    "password": {
                                        "type": "string",
                                        "default": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The user was registered successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed to register. There are two reasons to that, specified by the code in body:<br>- 0: validation<br>- 1: email already exists<br>",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "default": 0
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Display a list of current events that the user can subscribe.",
                "description": "Get all events that are subscribable.",
                "operationId": "d75865607a88f3846e2f3dcedb6f1772",
                "responses": {
                    "200": {
                        "description": "A list of events.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "totalItems": {
                                            "type": "integer",
                                            "default": "1"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EventModel"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authenticated."
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "EventModel": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1000"
                    },
                    "name": {
                        "type": "string",
                        "example": "My Event"
                    },
                    "slug": {
                        "type": "string",
                        "example": "my-event"
                    },
                    "details": {
                        "type": "string",
                        "example": "A long text."
                    },
                    "subscriptionStart": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-06T20:13:42.529682Z"
                    },
                    "subscriptionEnd": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-06T20:13:42.529697Z"
                    },
                    "presentationAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-06T20:13:42.529706Z"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-06T20:13:42.529715Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-06T20:13:42.529723Z"
                    },
                    "status": {
                        "type": "integer",
                        "default": 1
                    }
                },
                "type": "object"
            },
            "EventStatus": {
                "type": "string",
                "enum": [
                    "Draft",
                    "Created",
                    "SubscriptionsOpen",
                    "SubscriptionsEnded",
                    "Done",
                    "Canceled"
                ]
            },
            "UserModel": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1000"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "email@email.com"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-06T20:13:42.530257Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-06T20:13:42.530268Z"
                    },
                    "status": {
                        "type": "integer",
                        "default": 0
                    }
                },
                "type": "object"
            },
            "UserStatus": {
                "type": "string",
                "enum": [
                    "Registered",
                    "Banned"
                ]
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Enter token",
                "name": "Authorization",
                "in": "header",
                "scheme": "bearer"
            }
        }
    }
}